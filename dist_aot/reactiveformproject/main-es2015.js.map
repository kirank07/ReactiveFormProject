{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/contactdetails/contactdetails.component.html","./src/app/contactdetails/contactdetails.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"container\">\n  <app-contactdetails></app-contactdetails>\n</div>\n\n\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Reactive Form Project';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AlertModule } from 'ngx-bootstrap';\nimport { ContactdetailsComponent } from './contactdetails/contactdetails.component'; \nimport {FormsModule} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactdetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AlertModule.forRoot(),\n    FormsModule,          // Add names of modules\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div  class=\"container\">\n    <div class=\"conatiner-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n              <h1 align=\"center\" class=\"text-danger\">Contact Our</h1>\n              <h2 align=\"center\">Customer Support Center</h2>\n            </div>\n            <div class=\"col-md-2\">\n              <img src=\"/assets/laptop.jpeg\" align =\"right\" >\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n              <h4 class=\"text-center\">Contact Information</h4>\n            </div>\n          </div>\n          <div class=\"row\">\n              <div class=\"col-md-8\">\n              <p class=\"float-right\">Please fill out your contact infomation below.</p>\n              </div>\n          </div>\n    </div>\n    <div class=\"container-fluid\">\n      <form [formGroup]=\"contactForm\">\n          <div class=\"form-group\">\n              \n            <div class=\"row\">\n              <div class=\"col-md-4\">\n                    <label>First Name</label>  \n                <input [class.is-invalid]=\"contactForm.get('firstname').invalid && contactForm.get('firstname').touched\" type=\"text\" class=\"form-control\" formControlName=\"firstname\">\n                  \n                  <small [class.d-none]=\"contactForm.get('firstname').valid || contactForm.get('firstname').untouched\" class=\"text-danger\">First Name is required</small>\n\n              </div>\n              <div class=\"col-md-4\">\n                    <label>Last Name</label>  \n                <input [class.is-invalid]=\"contactForm.get('lastname').invalid && contactForm.get('lastname').touched\" type=\"text\" class=\"form-control\" formControlName=\"lastname\">\n                  \n                  <small [class.d-none]=\"contactForm.get('lastname').valid || contactForm.get('lastname').untouched\" class=\"text-danger\">Last Name is required</small>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n              <div class=\"row\">\n                  <div class=\"col-md-8\">\n                      <label class=\"control-label\">Email</label>\n                     <input [class.is-invalid]=\"contactForm.get('email').invalid && contactForm.get('email').touched\" type=\"email\" class=\"form-control\" formControlName=\"email\">\n                     <small [class.d-none]=\"contactForm.get('email').valid|| contactForm.get('email').untouched\" class=\"text-danger\">Email id is not valid.</small>\n                  </div>\n              </div>\n          </div>\n          <div class=\"form-group\">\n              <div class=\"row\">\n                  <div class=\"col-md-8\">\n                      <label class=\"control-label\">Phone</label>\n                     <input [class.is-invalid]=\"contactForm.get('phone').invalid && contactForm.get('phone').touched\" type=\"tel\" class=\"form-control\" formControlName=\"phone\">\n                     <small [class.d-none]=\"contactForm.get('phone').valid || contactForm.get('phone').untouched\" class=\"text-danger\">Mobile number is Compulsorry for further communication.</small>\n                  </div>\n              </div>\n          </div>\n          <div class=\"form-group\">\n              <div class=\"row\">\n                  <div class=\"col-md-8\">\n                      <label class=\"control-label\">Address</label>\n                      <textarea [class.is-invalid]=\"contactForm.get('address').invalid && contactForm.get('address').touched\" class=\"form-control\" formControlName=\"address\"></textarea>\n                      <small [class.d-none]=\"contactForm.get('address').valid || contactForm.get('address').untouched\" class=\"text-danger\">Address is required</small>\n                  </div>\n              </div>\n          </div>\n          <div class=\"form-group\">\n              <div class=\"row\">\n                  <div class=\"col-md-8\">\n                        <button type=\"button\" class=\"btn btn-primary ml-3\" (click)=\"SetData()\">Set Values</button>\n                      <button class=\"btn btn-primary float-right\" type=\"submit\">Submit</button>\n                  </div>\n              </div>\n          </div>\n      </form>\n      \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder,FormGroup,Validators, FormControl, MinLengthValidator} from '@angular/forms'\n@Component({\n  selector: 'app-contactdetails',\n  templateUrl: './contactdetails.component.html',\n  styleUrls: ['./contactdetails.component.css']\n})\nexport class ContactdetailsComponent implements OnInit {\n\n  constructor(public _fbobj :  FormBuilder) { }\n  contactForm = this._fbobj.group({\n    firstname :['',[Validators.required]],\n    lastname : ['',[Validators.required]],\n    email : ['',[Validators.email]],\n    phone : ['',[Validators.required,Validators.minLength(10)]],\n    address : ['',[Validators.required]]\n\n  });\n\n  SetData()\n  {\n    this.contactForm.setValue(\n      {\n        firstname : 'Kiran',\n        lastname : 'Khade',\n        email :  'kiran.khade07@gmail.com',\n        phone : '9637898945',\n        address :'Pune'\n      }\n    )\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}